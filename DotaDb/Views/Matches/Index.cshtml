@using PagedList;
@using PagedList.Mvc;
@model IPagedList<DotaDb.ViewModels.LiveLeagueGameListItemViewModel>

@{
    ViewBag.Title = "Matches";
    ViewBag.Description = "There are currently " + Model.Count + " live league games. This listing will provide an overview of the status of each game.";
    ViewBag.HeaderImageName = "bg1.jpg";
    ViewBag.HeaderText = "Live League Games";
}

<div class="row">
    <div class="col-md-8 col-md-offset-2">
        @if (!HttpContext.Current.IsDebuggingEnabled)
        {
            <!-- top matches (dotadb) -->
            <ins class="adsbygoogle"
                 style="display:block"
                 data-ad-client="ca-pub-1823005717277864"
                 data-ad-slot="7026516636"
                 data-ad-format="auto"></ins>
            <script>
(adsbygoogle = window.adsbygoogle || []).push({});
            </script>
        }
        else
        {
            <div style="width: 610px; margin: 5px auto;">
                <img src="https://placehold.it/600x90" />
            </div>
        }
    </div>
</div>
<div class="panel panel-default">
    <div class="list-group live-league-game-list">
        @foreach (var game in Model)
        {
            <a href="@Url.Action("live", "matches", new { id = game.MatchId })" class="list-group-item">
                <div class="row">
                    <div class="col-md-4">
                        <div class="media">
                            <div class="media-left">
                                <div class="thumbnail league-logo">
                                    <img class="media-object" src="@game.LeagueLogoPath" alt="...">
                                </div>
                            </div>
                            <div class="media-body">
                                <h3 class="media-heading">@game.LeagueName</h3>
                                <h4 class="teams"><span class="text-success">@game.RadiantTeamName</span> vs. <span class="text-danger">@game.DireTeamName</span></h4>
                                <p class="stats">
                                    <i class="fa fa-clock-o fa-fw"></i>
                                    <span class="text-muted text-uppercase">Elapsed:</span> @game.ElapsedTime
                                    <br />
                                    <i class="fa fa-desktop fa-fw"></i>
                                    <span class="text-muted text-uppercase">Spectators:</span> @game.SpectatorCount
                                    <br />
                                    <i class="fa fa-list-alt fa-fw"></i>
                                    <span class="text-muted text-uppercase">Best of:</span> @game.BestOf
                                    <br />
                                    <i class="fa fa-trophy fa-fw"></i>
                                    <span class="text-muted text-uppercase">Series:</span> @String.Format("{0} - {1}", game.RadiantSeriesWins, game.DireSeriesWins)
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="row">
                            <div class="col-md-6">
                                <h3 style="margin: 0 0 5px 0" class="text-success">@game.RadiantKillCount</h3>
                                @foreach (var player in game.RadiantPlayers)
                                {
                                    if (!String.IsNullOrEmpty(player.MinimapIconFilePath))
                                    {
                                        <img src="@player.MinimapIconFilePath" width="24" height="24" title="@player.HeroName" />
                                    }
                                    @player.PlayerName
                                    <br />
                                }
                            </div>
                            <div class="col-md-6">
                                <h3 style="margin: 0 0 5px 0" class="text-danger">@game.DireKillCount</h3>
                                @foreach (var player in game.DirePlayers)
                                {
                                    if (!String.IsNullOrEmpty(player.MinimapIconFilePath))
                                    {
                                        <img src="@player.MinimapIconFilePath" width="24" height="24" title="@player.HeroName" />
                                    }
                                    @player.PlayerName
                                    <br />
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <h5 style="margin: 5px 0" class="text-uppercase text-muted">
                            Total Worth:
                        </h5>
                        <div class="progress" style="margin-bottom: 5px">
                            <div class="progress-bar progress-bar-success" style="width: @game.RadiantTotalWorthPercent%">
                                <span class="sr-only">@String.Format("{0}%", game.RadiantTotalWorthPercent)</span>
                                @game.RadiantTotalWorth.ToString("N0")
                            </div>
                            <div class="progress-bar progress-bar-danger" style="width: @game.DireTotalWorthPercent%">
                                <span class="sr-only">@String.Format("{0}%", game.DireTotalWorthPercent)</span>
                                @game.DireTotalWorth.ToString("N0")
                            </div>
                        </div>
                        <h5 style="margin: 5px 0" class="text-uppercase text-muted">
                            Total XP:
                        </h5>
                        <div class="progress" style="margin-bottom: 5px">
                            <div class="progress-bar progress-bar-success" style="width: @game.RadiantTotalExperiencePercent%">
                                <span class="sr-only">@String.Format("{0}%", game.RadiantTotalExperiencePercent)</span>
                                @game.RadiantTotalExperience.ToString("N0")
                            </div>
                            <div class="progress-bar progress-bar-danger" style="width: @game.DireTotalExperiencePercent%">
                                <span class="sr-only">@String.Format("{0}%", game.DireTotalExperiencePercent)</span>
                                @game.DireTotalExperience.ToString("N0")
                            </div>
                        </div>
                    </div>
                </div>
            </a>
        }
    </div>
</div>
@if (Model.PageCount > 1)
{
    @Html.PagedListPager(Model, page => Url.Action("index", new { page }))
}

<div class="row" style="margin-top: 15px">
    <div class="col-md-8 col-md-offset-2">
        @if (!HttpContext.Current.IsDebuggingEnabled)
        {
            <!-- bottom matches (dotadb) -->
            <ins class="adsbygoogle"
                 style="display:block"
                 data-ad-client="ca-pub-1823005717277864"
                 data-ad-slot="9979983033"
                 data-ad-format="auto"></ins>
            <script>
(adsbygoogle = window.adsbygoogle || []).push({});
            </script>
        }
        else
        {
            <div style="width: 610px; margin: 5px auto;">
                <img src="https://placehold.it/600x90" />
            </div>
        }
    </div>
</div>


@section scripts {
    @if (!HttpContext.Current.IsDebuggingEnabled)
    {
        <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
    }
}
