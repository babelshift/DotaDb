@using PagedList;
@using PagedList.Mvc;
@model IPagedList<DotaDb.ViewModels.LiveLeagueGameListItemViewModel>

@{
    ViewBag.Title = "Matches";
}

@*<div class="row">
    <div class="col-md-12">
        <ol class="breadcrumb">
            <li class="active">Matches</li>
        </ol>
    </div>
</div>*@
<ul class="nav nav-tabs">
    <li role="presentation" class="active">
        <a href="#">
            <i class="fa fa-ticket"></i>
            Live League Games
        </a>
    </li>
    @*<li role="presentation">
        <a href="#">
            <i class="fa fa-book"></i>
            Match History
        </a>
    </li>*@
</ul>
<div class="panel panel-default">
    <div class="list-group live-league-game-list">
        @foreach (var game in Model)
        {
            <a href="@Url.Action("live", "matches", new { id = game.MatchId })" class="list-group-item">
                <div class="row">
                    <div class="col-md-4">
                        <div class="media">
                            <div class="media-left">
                                <div class="thumbnail league-logo">
                                    <img class="media-object" src="@game.LeagueLogoPath" alt="...">
                                </div>
                            </div>
                            <div class="media-body">
                                <h3 class="media-heading">@game.LeagueName</h3>
                                <h4 class="teams"><span class="text-success">@game.RadiantTeamName</span> vs. <span class="text-danger">@game.DireTeamName</span></h4>
                                <p class="stats">
                                    <i class="fa fa-clock-o fa-fw"></i>
                                    <span class="text-muted text-uppercase">Elapsed:</span> @game.ElapsedTime
                                    <br />
                                    <i class="fa fa-desktop fa-fw"></i>
                                    <span class="text-muted text-uppercase">Spectators:</span> @game.SpectatorCount
                                    <br />
                                    <i class="fa fa-list-alt fa-fw"></i>
                                    <span class="text-muted text-uppercase">Best of:</span> @game.BestOf
                                    <br />
                                    <i class="fa fa-trophy fa-fw"></i>
                                    <span class="text-muted text-uppercase">Series:</span> @String.Format("{0} - {1}", game.RadiantSeriesWins, game.DireSeriesWins)
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="row">
                            <div class="col-md-6">
                                <h3 style="margin: 0 0 5px 0" class="text-success">@game.RadiantKillCount</h3>
                                @foreach (var player in game.RadiantPlayers)
                                {
                                    if (!String.IsNullOrEmpty(player.MinimapIconFilePath))
                                    {
                                        <img src="@player.MinimapIconFilePath" width="24" height="24" title="@player.HeroName" />
                                    }
                                    @player.PlayerName
                                    <br />
                                }
                            </div>
                            <div class="col-md-6">
                                <h3 style="margin: 0 0 5px 0" class="text-danger">@game.DireKillCount</h3>
                                @foreach (var player in game.DirePlayers)
                                {
                                    if (!String.IsNullOrEmpty(player.MinimapIconFilePath))
                                    {
                                        <img src="@player.MinimapIconFilePath" width="24" height="24" title="@player.HeroName" />
                                    }
                                    @player.PlayerName
                                    <br />
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <h5 style="margin: 5px 0" class="text-uppercase text-muted">
                            Total Worth:
                        </h5>
                        <div class="progress" style="margin-bottom: 5px">
                            <div class="progress-bar progress-bar-success" style="width: @game.RadiantTotalWorthPercent%">
                                <span class="sr-only">@String.Format("{0}%", game.RadiantTotalWorthPercent)</span>
                                @game.RadiantTotalWorth.ToString("N0")
                            </div>
                            <div class="progress-bar progress-bar-danger" style="width: @game.DireTotalWorthPercent%">
                                <span class="sr-only">@String.Format("{0}%", game.DireTotalWorthPercent)</span>
                                @game.DireTotalWorth.ToString("N0")
                            </div>
                        </div>
                        <h5 style="margin: 5px 0" class="text-uppercase text-muted">
                            Total XP:
                        </h5>
                        <div class="progress" style="margin-bottom: 5px">
                            <div class="progress-bar progress-bar-success" style="width: @game.RadiantTotalExperiencePercent%">
                                <span class="sr-only">@String.Format("{0}%", game.RadiantTotalExperiencePercent)</span>
                                @game.RadiantTotalExperience.ToString("N0")
                            </div>
                            <div class="progress-bar progress-bar-danger" style="width: @game.DireTotalExperiencePercent%">
                                <span class="sr-only">@String.Format("{0}%", game.DireTotalExperiencePercent)</span>
                                @game.DireTotalExperience.ToString("N0")
                            </div>
                        </div>
                    </div>
                </div>
            </a>
        }
    </div>
</div>
@if (Model.PageCount > 1)
{
    @Html.PagedListPager(Model, page => Url.Action("index", new { page }))
}
