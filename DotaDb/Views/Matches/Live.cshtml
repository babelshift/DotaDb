@model DotaDb.ViewModels.LiveLeagueGameDetailViewModel

@{
    Layout = "~/Views/Shared/_LayoutSplash.cshtml";
    ViewBag.Title = "Live Match";
}

<div class="row">
    <div class="col-md-8 col-md-offset-2">
        <ol class="breadcrumb">
            <li><a href="@Url.Action("index", "matches")">Matches</a></li>
            <li><a href="@Url.Action("live", "matches")">Live League Games</a></li>
            <li class="active">ID: @Model.MatchId</li>
        </ol>
    </div>
</div>
<div class="row">
    <div class="col-md-8 col-md-offset-2">
        <div class="row">
            <div class="col-md-4">
                <h4 style="margin: 0">@Model.LeagueName</h4>
                <div class="thumbnail" style="margin: 0; border: 0; width: 100px">
                    <img src="@Model.LeagueLogoPath" class="shadow" />
                </div>
                <p class="text-uppercase" style="margin: 0">
                    <i class="fa fa-list-alt fa-fw"></i>
                    <span class="text-muted">Tier:</span>
                    Unknown
                </p>
                <p class="text-uppercase" style="margin: 0">
                    <i class="fa fa-globe fa-fw"></i>
                    <span class="text-muted">Location:</span>
                    Unknown
                </p>
            </div>
            <div class="col-md-4 text-center text-uppercase">
            </div>
            <div class="col-md-4 text-right text-uppercase">
                <p style="margin: 0">
                    <span class="text-muted">Lobby ID:</span>
                    @Model.LobbyId
                </p>
                <p style="margin: 0">
                    <span class="text-muted">Match ID:</span>
                    @Model.MatchId
                </p>
                <p style="margin: 0">
                    <span class="text-muted">Stream Delay:</span>
                    <span class="text-lowercase">@Model.StreamDelay</span>
                </p>
                <p style="margin: 0">
                    <i class="fa fa-ticket fa-fw"></i>
                    <span class="text-muted">Game #:</span>
                    @Model.GameNumber
                </p>
                <p style="margin: 0">
                    <span class="text-muted">Series:</span>
                    @String.Format("{0} (radiant) - {1} (dire)", Model.RadiantSeriesWins, Model.DireSeriesWins) (Best of @Model.BestOf)
                </p>
                <p style="margin: 0">
                    <i class="fa fa-clock-o fa-fw"></i>
                    <span class="text-muted">
                        Started:
                    </span>
                    @Model.TimeStarted.ToString("dd MMM yyyy HH:mm:ss")
                </p>
                <p style="margin: 0">
                    <i class="fa fa-desktop fa-fw"></i>
                    <span class="text-muted">
                        Spectators:
                    </span>
                    @Model.SpectatorCount
                </p>
            </div>
        </div>
    </div>
</div>
<hr />
<div class="row">
    <div class="col-md-10 col-md-offset-1">
        <div class="row">
            <div class="col-md-4">
                <h3 style="margin: 0; font-weight: 100;" class="pull-left">@Model.RadiantTeamName</h3>
                <h2 style="margin: 0;" class="pull-right">@Model.RadiantKillCount <small class="text-uppercase">kills</small></h2>
            </div>
            <div class="col-md-4 text-center">
                <h4 style="margin: 0;">
                    <i class="fa fa-clock-o"></i>
                    <span class="text-muted text-uppercase">Elapsed:</span>
                    @Model.ElapsedTimeDisplay
                </h4>
            </div>
            <div class="col-md-4 text-right">
                <h3 style="margin: 0; font-weight: 100;" class="pull-right">@Model.DireTeamName</h3>
                <h2 style="margin: 0;" class="pull-left">@Model.DireKillCount <small class="text-uppercase">kills</small></h2>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                @foreach (var player in Model.RadiantPlayers)
                {
                    <div class="well well-sm" style="padding: 5px; margin-bottom: 10px">
                        <h4 class="media-heading" style="margin: 0">
                            @player.PlayerName
                            <small class="text-uppercase text-muted">@player.HeroName</small>
                        </h4>
                        <div class="pull-left text-right" style="margin: 9px 5px 0 0; line-height: 13px">
                            <small class="text-uppercase text-muted">Level</small>
                            <h4 style="margin: 0;">@player.Level</h4>
                        </div>
                        <div class="media" style="margin-top: 5px">
                            <div class="media-left">
                                <div class="thumbnail" style="margin: 0; border: 0; padding: 0; width: 75px;">
                                    @if (String.IsNullOrEmpty(player.HeroAvatarFileName))
                                    {
                                        <img src="@Url.Content("~/Content/icons/heroes/base_lg.png")" class="shadow" />
                                    }
                                    else
                                    {
                                        <img src="@String.Format("http://cdn.dota2.com/apps/dota2/images/heroes/{0}_lg.png", player.HeroAvatarFileName)" class="shadow" />
                                    }
                                </div>
                            </div>
                            <div class="media-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <h4 style="margin: 0">
                                            @player.KillCount <small class="text-muted text-uppercase">kill</small>, @player.AssistCount <small class="text-muted text-uppercase">assist</small>
                                            <br />
                                            @player.DeathCount <small class="text-muted text-uppercase">death</small>
                                        </h4>
                                    </div>
                                    <div class="col-md-6 live-game-items">
                                        @for (int i = 0; i < player.Items.Count; i++)
                                        {
                                            // after the third item we need to clear because the items should be arranged like so:
                                            // [item1][item2][item3]
                                            // [item4][item5][item6]
                                            if (i == 3)
                                            {
                                                <div class="clearfix"></div>
                                            }
                                            <div class="thumbnail pull-right">
                                                @if (player.Items[i] != null)
                                                {
                                                    <img src="@player.Items[i].IconPath" title="@player.Items[i].Name" />
                                                }
                                                else
                                                {
                                                    <img src="@Url.Content("~/Content/icons/items/base_lg.png")" title="Empty or unknown" />
                                                }
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="col-md-4 text-center">
                <div style="position: relative; width: 90%" class="center-block">
                    <img src="~/Content/dota_minimap_512.jpg" style="width: 100%" />
                    @foreach (var player in Model.DirePlayers)
                    {
                        if (!String.IsNullOrEmpty(player.MinimapIconFilePath))
                        {
                            <img src="@player.MinimapIconFilePath" class="minimap-icon" style="bottom: @(player.PositionYPercent)%; left: @(player.PositionXPercent)%" />
                            <div class="minimap-icon-circle minimap-icon-circle-dire" style="bottom: @(player.PositionYPercent)%; left: @(player.PositionXPercent)%"></div>
                        }
                    }
                    @foreach (var player in Model.RadiantPlayers)
                    {
                        if (!String.IsNullOrEmpty(player.MinimapIconFilePath))
                        {
                            <img src="@player.MinimapIconFilePath" class="minimap-icon" style="bottom: @(player.PositionYPercent)%; left: @(player.PositionXPercent)%" />
                            <div class="minimap-icon-circle minimap-icon-circle-radiant" style="bottom: @(player.PositionYPercent)%; left: @(player.PositionXPercent)%"></div>
                        }
                    }
                </div>
                <div class="text-center">
                    <h5 style="margin-bottom: 0" class="text-uppercase">
                        <span class="text-muted">Roshan:</span>
                        @if (Model.IsRoshanAlive)
                        {
                            <span class="text-success">
                                <i class="fa fa-check"></i>
                                Alive
                            </span>
                        }
                        else
                        {
                            <span class="text-danger">
                                <i class="fa fa-remove"></i>
                                Dead
                            </span>
                            <span class="text-lowercase">(@Model.RoshanRespawnTimer)</span>
                        }
                    </h5>
                </div>
                <hr style="margin: 5px 0" />
                <h5 style="margin: 0" class="text-uppercase text-muted">
                    Total Worth:
                </h5>
                <div class="progress" style="margin-bottom: 5px">
                    <div class="progress-bar progress-bar-success" style="width: @Model.RadiantTotalWorthPercent%">
                        <span class="sr-only">@String.Format("{0}%", Model.RadiantTotalWorthPercent)</span>
                        @Model.RadiantTotalWorth.ToString("N0")
                    </div>
                    <div class="progress-bar progress-bar-danger" style="width: @Model.DireTotalWorthPercent%">
                        <span class="sr-only">@String.Format("{0}%", Model.DireTotalWorthPercent)</span>
                        @Model.DireTotalWorth.ToString("N0")
                    </div>
                </div>
                <h5 style="margin: 0" class="text-uppercase text-muted">
                    Total XP:
                </h5>
                <div class="progress">
                    <div class="progress-bar progress-bar-success" style="width: @Model.RadiantTotalExperiencePercent%">
                        <span class="sr-only">@String.Format("{0}%", Model.RadiantTotalExperiencePercent)</span>
                        @Model.RadiantTotalExperience.ToString("N0")
                    </div>
                    <div class="progress-bar progress-bar-danger" style="width: @Model.DireTotalExperiencePercent%">
                        <span class="sr-only">@String.Format("{0}%", Model.DireTotalExperiencePercent)</span>
                        @Model.DireTotalExperience.ToString("N0")
                    </div>
                </div>
            </div>

            <div class="col-md-4 text-right">
                @foreach (var player in Model.DirePlayers)
                {
                    <div class="well well-sm" style="padding: 5px; margin-bottom: 10px">
                        <h4 class="media-heading" style="margin: 0">
                            @player.PlayerName
                            <small class="text-uppercase text-muted">@player.HeroName</small>
                        </h4>
                        <div class="pull-right text-left" style="margin: 9px 0 0 5px; line-height: 13px">
                            <small class="text-uppercase text-muted">Level</small>
                            <h4 style="margin: 0;">@player.Level</h4>
                        </div>
                        <div class="media" style="margin-top: 5px">
                            <div class="media-body">
                                <div class="row">
                                    <div class="col-md-6 live-game-items">
                                        @for (int i = 0; i < player.Items.Count; i++)
                                        {
                                            // after the third item we need to clear because the items should be arranged like so:
                                            // [item1][item2][item3]
                                            // [item4][item5][item6]
                                            if (i == 3)
                                            {
                                                <div class="clearfix"></div>
                                            }
                                            <div class="thumbnail pull-left">
                                                @if (player.Items[i] != null)
                                                {
                                                    <img src="@player.Items[i].IconPath" title="@player.Items[i].Name" />
                                                }
                                                else
                                                {
                                                    <img src="@Url.Content("~/Content/icons/items/base_lg.png")" title="Empty or unknown" />
                                                }
                                            </div>
                                        }
                                    </div>
                                    <div class="col-md-6">
                                        <h4 style="margin: 0">
                                            @player.KillCount <small class="text-muted text-uppercase">kill</small>, @player.AssistCount <small class="text-muted text-uppercase">assist</small>
                                            <br />
                                            @player.DeathCount <small class="text-muted text-uppercase">death</small>
                                        </h4>
                                    </div>
                                </div>
                            </div>
                            <div class="media-right">
                                <div class="thumbnail" style="margin: 0; border: 0; padding: 0; width: 75px;">
                                    @if (String.IsNullOrEmpty(player.HeroAvatarFileName))
                                    {
                                        <img src="@Url.Content("~/Content/icons/heroes/base_lg.png")" class="shadow" />
                                    }
                                    else
                                    {
                                        <img src="@String.Format("http://cdn.dota2.com/apps/dota2/images/heroes/{0}_lg.png", player.HeroAvatarFileName)" class="shadow" />
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>