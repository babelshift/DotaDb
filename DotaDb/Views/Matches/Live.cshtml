@model DotaDb.ViewModels.LiveLeagueGameDetailViewModel

@{
    Layout = "~/Views/Shared/_LayoutSplash.cshtml";
    ViewBag.Title = Model.RadiantTeamName + " vs. " + Model.DireTeamName;
    ViewBag.Description = "This is a Dota 2 league match between two teams in the " + Model.LeagueTier + " tier. Click to see match details.";
    ViewBag.ImageUrl = Model.LeagueLogoPath;
    ViewBag.RefreshPageTime = 20;
}

<div class="container">
    <div class="live-league-game" style="margin-top: 15px">

        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">
                        <div class="col-xs-3">
                            <h3 style="margin-top: 0; margin-bottom: 5px">Match @Model.MatchId</h3>
                            <h4 class="text-success text-uppercase" style="margin-top: 0; margin-bottom: 0">
                                <i class="fa fa-exclamation-circle"></i> Live Now
                            </h4>
                        </div>
                            <div class="col-xs-9">
                                <div class="pull-right">
                                    <dl style="display: inline-block; margin-right: 10px">
                                        <dt class="text-info">
                                            @if (!String.IsNullOrWhiteSpace(Model.LeagueName))
                                            {
                                                @Model.LeagueName
                                            }
                                            else
                                            {
                                                @:Unknown
                                            }
                                        </dt>
                                        <dd class="text-uppercase">League</dd>
                                    </dl>
                                    <dl style="display: inline-block; margin-right: 10px">
                                        <dt>@Model.LeagueTier</dt>
                                        <dd class="text-uppercase">Tier</dd>
                                    </dl>
                                    <dl style="display: inline-block; margin-right: 10px">
                                        <dt>@Model.SpectatorCount</dt>
                                        <dd class="text-uppercase">Watching</dd>
                                    </dl>
                                    <dl style="display: inline-block; margin-right: 10px">
                                        <dt>@Model.TimeStarted.ToString("MMM dd, HH:mm") UTC</dt>
                                        <dd class="text-uppercase">Match Started</dd>
                                    </dl>
                                    <dl style="display: inline-block;">
                                        <dt>@Model.ElapsedTimeDisplay</dt>
                                        <dd class="text-uppercase">Duration</dd>
                                    </dl>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-xs-5 col-sm-6 col-md-3">
                                <img src="@Model.LeagueLogoPath" width="150" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-sm-4">
                                <h3 class="team-name">@Model.RadiantTeamName</h3>
                                <h2 class="no-margin">@Model.RadiantKillCount <small class="text-uppercase">kills</small></h2>
                            </div>
                            <div class="col-sm-4 text-center">
                                <h3 class="no-margin" style="font-weight: 200">
                                    &mdash; vs &mdash;
                                </h3>
                            </div>
                            <div class="col-sm-4 text-right">
                                <h3 class="team-name">@Model.DireTeamName</h3>
                                <h2 class="no-margin">@Model.DireKillCount <small class="text-uppercase">kills</small></h2>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        @foreach (var player in Model.RadiantPlayers)
                        {
                            <div class="well well-sm player-well">
                                @if (!player.IsAlive)
                                {
                                    <div class="death text-danger">
                                        <span>Respawn in @player.RespawnTimerSeconds sec</span>
                                    </div>
                                }
                                <h4 class="media-heading no-margin">
                                    @player.PlayerName
                                    &mdash;
                                    <a href="@Url.Action("hero", "heroes", new { id = player.HeroId })">
                                        <small class="text-uppercase text-muted">@player.HeroName</small>
                                    </a>
                                </h4>
                                <div class="media player-details">
                                    <div class="media-left">
                                        @Html.Partial("_PlayerHeroAvatarPartial", player)
                                    </div>
                                    <div class="media-body">
                                        <div class="row">
                                            <div class="col-xs-5">
                                                @Html.Partial("_PlayerKillDeathAssistPartial", player)
                                            </div>
                                            <div class="col-xs-7 live-game-items">
                                                @for (int i = 0; i < player.Items.Count; i++)
                                                {
                                                    // after the third item we need to clear because the items should be arranged like so:
                                                    // [item1][item2][item3]
                                                    // [item4][item5][item6]
                                                    if (i == 3)
                                                    {
                                                        <div class="clearfix"></div>
                                                    }
                                                    <div class="thumbnail pull-right">
                                                        @Html.Partial("_PlayerItemIconPartial", player.Items[i], new ViewDataDictionary())
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <hr style="margin: 5px 0" />
                                <div class="row text-center">
                                    @Html.Partial("_PlayerStatsPartial", player)
                                </div>
                            </div>
                        }
                    </div>
                    <div class="col-md-4 text-center">
                        <div class="center-block minimap-container">
                            <img src="~/Content/dota_minimap_512.jpg" style="width: 100%" />
                            @foreach (var player in Model.DirePlayers)
                            {
                                if (!String.IsNullOrEmpty(player.MinimapIconFilePath))
                                {
                                    <img src="@player.MinimapIconFilePath" class="minimap-icon" style="bottom: @(player.PositionYPercent)%; left: @(player.PositionXPercent)%" />
                                    <div class="minimap-icon-circle large dire" style="bottom: @(player.PositionYPercent)%; left: @(player.PositionXPercent)%"></div>
                                }
                            }
                            @foreach (var player in Model.RadiantPlayers)
                            {
                                if (!String.IsNullOrEmpty(player.MinimapIconFilePath))
                                {
                                    <img src="@player.MinimapIconFilePath" class="minimap-icon" style="bottom: @(player.PositionYPercent)%; left: @(player.PositionXPercent)%" />
                                    <div class="minimap-icon-circle large radiant" style="bottom: @(player.PositionYPercent)%; left: @(player.PositionXPercent)%"></div>
                                }
                            }
                            @Html.Partial("_RadiantTowerMinimapIconsPartial", Model.RadiantTowerStates, new ViewDataDictionary())
                            @Html.Partial("_DireTowerMinimapIconsPartial", Model.DireTowerStates, new ViewDataDictionary())
                        </div>
                        <div class="panel panel-default" style="margin-top: 15px;">
                            <div class="panel-body">
                                <div class="text-center">
                                    <h5 class="text-uppercase text-muted" style="margin-top: 0">Elapsed: <strong>@Model.ElapsedTimeDisplay</strong></h5>
                                    <h5 class="text-uppercase roshan-status">
                                        <span class="text-muted">Roshan:</span>
                                        @if (Model.IsRoshanAlive)
                                        {
                                            <span class="text-success">
                                                <i class="fa fa-check"></i>
                                                Alive
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-danger">
                                                <i class="fa fa-remove"></i>
                                                Dead
                                                <span class="text-lowercase">(@Model.RoshanRespawnTimer)</span>
                                            </span>
                                        }
                                    </h5>
                                </div>
                                <hr style="margin: 5px 0" />
                                <h5 class="text-uppercase text-muted no-margin">
                                    Total Worth:
                                </h5>
                                <div class="progress" style="margin-bottom: 5px">
                                    <div class="progress-bar progress-bar-success" style="width: @Model.RadiantTotalWorthPercent%">
                                        <span class="sr-only">@String.Format("{0}%", Model.RadiantTotalWorthPercent)</span>
                                        @Model.RadiantTotalWorth.ToString("N0")
                                    </div>
                                    <div class="progress-bar progress-bar-danger" style="width: @Model.DireTotalWorthPercent%">
                                        <span class="sr-only">@String.Format("{0}%", Model.DireTotalWorthPercent)</span>
                                        @Model.DireTotalWorth.ToString("N0")
                                    </div>
                                </div>
                                <h5 class="text-uppercase text-muted no-margin">
                                    Total XP:
                                </h5>
                                <div class="progress" style="margin-bottom: 0">
                                    <div class="progress-bar progress-bar-success" style="width: @Model.RadiantTotalExperiencePercent%">
                                        <span class="sr-only">@String.Format("{0}%", Model.RadiantTotalExperiencePercent)</span>
                                        @Model.RadiantTotalExperience.ToString("N0")
                                    </div>
                                    <div class="progress-bar progress-bar-danger" style="width: @Model.DireTotalExperiencePercent%">
                                        <span class="sr-only">@String.Format("{0}%", Model.DireTotalExperiencePercent)</span>
                                        @Model.DireTotalExperience.ToString("N0")
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 text-right">
                        @foreach (var player in Model.DirePlayers)
                        {
                            <div class="well well-sm player-well">
                                @if (!player.IsAlive)
                                {
                                    <div class="death text-danger">
                                        <span>Respawn in @player.RespawnTimerSeconds sec</span>
                                    </div>
                                }
                                <h4 class="media-heading no-margin">
                                    @player.PlayerName
                                    &mdash;
                                    <a href="@Url.Action("hero", "heroes", new { id = player.HeroId })">
                                        <small class="text-uppercase text-muted">@player.HeroName</small>
                                    </a>
                                </h4>
                                <div class="media player-details">
                                    <div class="media-body">
                                        <div class="row">
                                            <div class="col-xs-7 live-game-items">
                                                @for (int i = 0; i < player.Items.Count; i++)
                                                {
                                                    // after the third item we need to clear because the items should be arranged like so:
                                                    // [item1][item2][item3]
                                                    // [item4][item5][item6]
                                                    if (i == 3)
                                                    {
                                                        <div class="clearfix"></div>
                                                    }
                                                    <div class="thumbnail pull-left">
                                                        @Html.Partial("_PlayerItemIconPartial", player.Items[i], new ViewDataDictionary())
                                                    </div>
                                                }
                                            </div>
                                            <div class="col-xs-5">
                                                @Html.Partial("_PlayerKillDeathAssistPartial", player)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="media-right">
                                        @Html.Partial("_PlayerHeroAvatarPartial", player)
                                    </div>
                                </div>
                                <hr style="margin: 5px 0" />
                                <div class="row text-center">
                                    @Html.Partial("_PlayerStatsPartial", player)
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <table id="table-stats" class="table table-condensed" data-toggle="table">
                        <thead>
                            <tr>
                                <th>Player</th>
                                <th>Hero</th>
                                <th data-sortable="true">Level</th>
                                <th data-sortable="true">Worth</th>
                                <th data-sortable="true">Gold</th>
                                <th data-sortable="true">XP</th>
                                <th data-sortable="true">Kills</th>
                                <th data-sortable="true">Deaths</th>
                                <th data-sortable="true">Assists</th>
                                <th data-sortable="true">Gold / Min</th>
                                <th data-sortable="true">XP / Min</th>
                                <th data-sortable="true">Last Hits</th>
                                <th data-sortable="true">Denies</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var player in Model.RadiantPlayers)
                            {
                                <tr class="success">
                                    @Html.Partial("_PlayerDetailTableRowPartial", player)
                                </tr>
                            }
                            @foreach (var player in Model.DirePlayers)
                            {
                                <tr class="danger">
                                    @Html.Partial("_PlayerDetailTableRowPartial", player)
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/bootstrap-table")
}