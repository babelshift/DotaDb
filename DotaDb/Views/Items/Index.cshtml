@model IReadOnlyCollection<DotaDb.ViewModels.GameItemViewModel>

@{
    ViewBag.Title = "Items in Game";
    ViewBag.Description = "There are currently " + Model.Count + " in game items to be purchased in Dota 2. This searchable listing provides detailed data-mined information regarding all in game items.";
    ViewBag.HeaderImageName = "bg6_fade.jpg";
    ViewBag.HeaderText = "In Game Items";
}

@*@Html.Partial("_BreadcrumbMenuPartial", "In Game")*@

<div class="row" style="margin-top: 5px; margin-bottom: 5px">
    <div class="col-md-8 col-md-offset-2">
        @if (!HttpContext.Current.IsDebuggingEnabled)
        {
            <!-- top items (dotadb) -->
            <ins class="adsbygoogle"
                 style="display:block"
                 data-ad-client="ca-pub-1823005717277864"
                 data-ad-slot="5549783432"
                 data-ad-format="auto"></ins>
                <script>
                    (adsbygoogle = window.adsbygoogle || []).push({});
                </script>
        }
        else
        {
            <div style="width: 610px; margin: 0 auto;">
                <img src="https://placehold.it/600x90" />
            </div>
        }
    </div>
</div>

@*@Html.Partial("_TabMenuPartial", "ingame")*@
<div class="panel panel-default">
    <div class="panel-body">
        @using (Html.BeginForm("index", "items", FormMethod.Get, new { @class = "form-inline", role = "form" }))
        {
            <div class="form-group">
                <input type="text" class="form-control" name="itemName" id="itemName" placeholder="Search for an item">
            </div>
            <button type="submit" class="btn btn-default">
                <i class="fa fa-search"></i>
                Search
            </button>
        }
        @if (!String.IsNullOrEmpty(ViewBag.SearchItemName))
        {
            <p>Filter: <strong>@String.Format("'{0}'", ViewBag.SearchItemName)</strong> <small><a href="@Url.Action("index", "items")"><i class="fa fa-remove"></i></a></small></p>
        }
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-body">
        <div class="row item-list">
            @{ int gameItemNumber = 0; }
            @foreach (var gameItem in Model)
            {
                <div class="col-md-4">
                    @if (gameItemNumber++ >= 3)
                    {
                        <hr />
                    }
                    <div class="media" style="margin-bottom: 0">
                        <div class="media-left">
                            <div class="thumbnail" style="margin: 0; border: 0; width: 64px" title="@gameItem.Name">
                                <img src="@gameItem.IconPath" class="shadow" />
                            </div>
                        </div>
                        <div class="media-body">
                            <h4 class="media-heading">
                                @if (!String.IsNullOrEmpty(gameItem.Name))
                                {
                                    @gameItem.Name
                                }
                                else
                                {
                                    @:Undefined
                                }
                            </h4>
                            <p class="text-muted">@gameItem.Lore</p>
                        </div>

                        <table class="table table-striped table-condensed" style="table-layout: fixed; margin-top: 15px">
                            <tbody class="text-uppercase">
                                <tr>
                                    <td>Item ID</td>
                                    <td>@gameItem.Id</td>
                                </tr>
                                <tr>
                                    <td>Cost</td>
                                    <td>@gameItem.Cost</td>
                                </tr>
                                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Mana Cost", Value = gameItem.ManaCost });}
                                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Duration", Value = gameItem.Duration });}
                                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Damage", Value = gameItem.Damage });}
                                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Cast Point", Value = gameItem.CastPoint });}
                                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Cast Range", Value = gameItem.CastRange });}
                                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Cooldown", Value = gameItem.Cooldown });}
                                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Target Flags", Value = gameItem.TargetFlags });}
                                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Target Types", Value = gameItem.TargetTypes });}
                                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Team Targets", Value = gameItem.TeamTargets });}
                                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Declarations", Value = gameItem.Declarations });}
                                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Disassemble Rules", Value = gameItem.DisassembleRule });}
                                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Shareability", Value = gameItem.Shareability });}
                                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Shop Tags", Value = gameItem.ShopTags });}
                                @if (gameItem.InitialCharges.HasValue)
                                {
                                    <tr>
                                        <td>Initial Charges</td>
                                        <td>@gameItem.InitialCharges.Value</td>
                                    </tr>
                                }
                                @if (gameItem.DisplayCharges.HasValue)
                                {
                                    <tr>
                                        <td>Display Charges</td>
                                        <td>@gameItem.DisplayCharges.Value</td>
                                    </tr>
                                }
                                @if (gameItem.StockInitial.HasValue)
                                {
                                    <tr>
                                        <td>Initial Stock</td>
                                        <td>@gameItem.StockInitial.Value</td>
                                    </tr>
                                }
                                @if (gameItem.StockMax.HasValue)
                                {
                                    <tr>
                                        <td>Max Stock</td>
                                        <td>@gameItem.StockMax.Value</td>
                                    </tr>
                                }
                                @if (gameItem.StockTime.HasValue)
                                {
                                    <tr>
                                        <td>Stock Time</td>
                                        <td>@gameItem.StockTime.Value</td>
                                    </tr>
                                }
                                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Alertable", Value = gameItem.IsAlertable }); }
                                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Droppable", Value = gameItem.IsDroppable }); }
                                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Killable", Value = gameItem.IsKillable }); }
                                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Permanent", Value = gameItem.IsPermanent }); }
                                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Purchasable", Value = gameItem.IsPurchasable }); }
                                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Sellable", Value = gameItem.IsSellable }); }
                                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Stackable", Value = gameItem.IsStackable }); }
                                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Contributes to Net Worth", Value = gameItem.ContributesToNetWorthWhenDropped }); }
                                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Secret Shop", Value = gameItem.SecretShop }); }
                                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Side Shop", Value = gameItem.SideShop }); }
                                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Recipe", Value = gameItem.IsRecipe }); }

                                @foreach (var abilitySpecial in gameItem.Attributes)
                                {
                                    <tr>
                                        <td>
                                            @if (!String.IsNullOrWhiteSpace(abilitySpecial.Name))
                                            {
                                                @abilitySpecial.Name
                                            }
                                            else
                                            {
                                                @String.Format("{0}", abilitySpecial.RawName.Replace("_", " "))
                                            }
                                        </td>
                                        <td>@abilitySpecial.Value</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        @if (!String.IsNullOrWhiteSpace(gameItem.Description))
                        {
                            <div class="alert alert-info">
                                <small>@gameItem.Description</small>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@section scripts {
    @if (!HttpContext.Current.IsDebuggingEnabled)
    {
        <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
    }
}
