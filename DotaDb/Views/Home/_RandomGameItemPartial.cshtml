@model DotaDb.ViewModels.GameItemViewModel

<li class="list-group-item">
    <div class="media" style="margin-bottom: 0">
        <div class="media-left">
            <div class="thumbnail" style="margin: 0; border: 0; width: 64px" title="@Model.Name">
                <img src="@Model.IconPath" class="shadow" />
            </div>
        </div>
        <div class="media-body">
            <h4 class="media-heading">
                @if (!String.IsNullOrWhiteSpace(Model.Name))
            {
                    @Model.Name
                }
                else
                {
                    @:Undefined
                }
            </h4>
            <p class="text-muted">@Model.Lore</p>
        </div>
        <table class="table table-striped table-condensed" style="table-layout: fixed; margin-top: 15px; margin-bottom: 0">
            <tbody class="text-uppercase">
                <tr>
                    <td>Item ID</td>
                    <td>@Model.Id</td>
                </tr>
                <tr>
                    <td>Cost</td>
                    <td>@Model.Cost</td>
                </tr>
                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Mana Cost", Value = Model.ManaCost });}
                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Duration", Value = Model.Duration });}
                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Damage", Value = Model.Damage });}
                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Cast Point", Value = Model.CastPoint });}
                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Cast Range", Value = Model.CastRange });}
                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Cooldown", Value = Model.Cooldown });}
                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Target Flags", Value = Model.TargetFlags });}
                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Target Types", Value = Model.TargetTypes });}
                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Team Targets", Value = Model.TeamTargets });}
                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Declarations", Value = Model.Declarations });}
                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Disassemble Rules", Value = Model.DisassembleRule });}
                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Shareability", Value = Model.Shareability });}
                @{Html.RenderPartial("_GameItemAttributeRowIfHasValuePartial", new DotaDb.ViewModels.GameItemStringAttributeViewModel() { Name = "Shop Tags", Value = Model.ShopTags });}
                @if (Model.InitialCharges.HasValue)
            {
                    <tr>
                        <td>Initial Charges</td>
                        <td>@Model.InitialCharges.Value</td>
                    </tr>
                }
                @if (Model.DisplayCharges.HasValue)
            {
                    <tr>
                        <td>Display Charges</td>
                        <td>@Model.DisplayCharges.Value</td>
                    </tr>
                }
                @if (Model.StockInitial.HasValue)
            {
                    <tr>
                        <td>Initial Stock</td>
                        <td>@Model.StockInitial.Value</td>
                    </tr>
                }
                @if (Model.StockMax.HasValue)
            {
                    <tr>
                        <td>Max Stock</td>
                        <td>@Model.StockMax.Value</td>
                    </tr>
                }
                @if (Model.StockTime.HasValue)
            {
                    <tr>
                        <td>Stock Time</td>
                        <td>@Model.StockTime.Value</td>
                    </tr>
                }
                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Alertable", Value = Model.IsAlertable }); }
                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Droppable", Value = Model.IsDroppable }); }
                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Killable", Value = Model.IsKillable }); }
                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Permanent", Value = Model.IsPermanent }); }
                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Purchasable", Value = Model.IsPurchasable }); }
                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Sellable", Value = Model.IsSellable }); }
                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Stackable", Value = Model.IsStackable }); }
                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Contributes to Net Worth", Value = Model.ContributesToNetWorthWhenDropped }); }
                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Secret Shop", Value = Model.SecretShop }); }
                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Side Shop", Value = Model.SideShop }); }
                @{Html.RenderPartial("_BooleanYesNoPartial", new DotaDb.ViewModels.GameItemNullableBoolAttributeViewModel() { Name = "Recipe", Value = Model.IsRecipe }); }

                @foreach (var abilitySpecial in Model.Attributes)
            {
                    <tr>
                        <td>
                            @if (!String.IsNullOrWhiteSpace(abilitySpecial.Name))
                            {
                                @abilitySpecial.Name
                            }
                            else
                            {
                                @String.Format("{0}", abilitySpecial.RawName.Replace("_", " "))
                            }
                        </td>
                        <td>@abilitySpecial.Value</td>
                    </tr>
                }
            </tbody>
        </table>
        @if (!String.IsNullOrWhiteSpace(Model.Description))
        {
            <hr />
            <p>@Model.Description</p>
        }
    </div>
</li>