@using DotaDb.Models
@using DotaDb.Data
@inject AppStateService AppStateService

<hr />
<h3 class="mt-2">Abilities</h3>
<div class="abilities">
    @foreach (var ability in Hero.Abilities)
    {
        <div class="card my-2">
            <div class="card-body">
                <div class="media" style="margin-bottom: 10px">
                    <img class="mr-3 shadow" src="@ability.AvatarImagePath" width="80" height="80" />
                    <div class="media-body">
                        <h4 class="mt-0">
                            @ability.Name
                            @if (ability.AbilityType != null)
                            {
                                <span class="badge badge-primary">@ability.AbilityType</span>
                            }
                        </h4>
                        <p class="text-muted">@ability.Description</p>
                    </div>
                </div>
                <hr />
                <div class="row">
                    @{ string unknownText = "N/A"; }
                    <div class="col-sm-6">
                        <table class="table table-sm table-borderless">
                            <tbody style="table-layout: fixed">
                                <tr>
                                    <td class="text-muted table-column-ability-name">ID</td>
                                    <td>@ability.Id</td>
                                </tr>
                                <HeroAbilityDetail DetailName="Behaviors" DetailValue="@ability.Behaviors" />
                                <HeroAbilityDetail DetailName="Target Types" DetailValue="@ability.TargetTypes" />
                                <HeroAbilityDetail DetailName="Team Targets" DetailValue="@ability.TeamTargets" />
                                <HeroAbilityDetail DetailName="Target Flags" DetailValue="@ability.TargetFlags" />
                                <HeroAbilityDetail DetailName="Cast Point" DetailValue="@ability.CastPoint" />
                                <HeroAbilityDetail DetailName="Cast Range" DetailValue="@ability.CastRange" />
                                <HeroAbilityDetail DetailName="Cooldown" DetailValue="@ability.Cooldown" />
                                <HeroAbilityDetail DetailName="Damage" DetailValue="@ability.Damage" />
                                <tr>
                                    <td class="text-uppercase text-muted table-column-ability-name">Damage Types</td>
                                    <td>
                                        @if (ability.DamageType != null)
                                        {
                                            if (ability.DamageType.Key == Steam.Models.DOTA2.DotaDamageType.PHYSICAL.Key)
                                            {
                                                <span class="text-primary"><strong>@ability.DamageType</strong></span>
                                            }
                                            else if (ability.DamageType.Key == Steam.Models.DOTA2.DotaDamageType.MAGICAL.Key)
                                            {
                                                <span class="text-info"><strong>@ability.DamageType</strong></span>
                                            }
                                            else if (ability.DamageType.Key == Steam.Models.DOTA2.DotaDamageType.PURE.Key)
                                            {
                                                <span class="text-success"><strong>@ability.DamageType</strong></span>
                                            }
                                        }
                                        else
                                        { @unknownText}
                                    </td>
                                </tr>
                                <HeroAbilityDetail DetailName="Duration" DetailValue="@ability.Duration" />
                                <HeroAbilityDetail DetailName="Mana Cost" DetailValue="@ability.ManaCost" />
                                <tr>
                                    <td class="text-uppercase text-muted table-column-ability-name">Spell Immunity Types</td>
                                    <td>
                                        @if (ability.SpellImmunityType != null)
                                        {
                                            if (ability.SpellImmunityType.Key == Steam.Models.DOTA2.DotaSpellImmunityType.ALLIES_YES.Key || ability.SpellImmunityType.Key == Steam.Models.DOTA2.DotaSpellImmunityType.ENEMIES_YES.Key)
                                            {
                                                <span class="text-success">
                                                    <i class="fas fa-check"></i>
                                                    <strong>@ability.SpellImmunityType</strong>
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="text-danger">
                                                    <i class="fas fa-times"></i>
                                                    <strong>@ability.SpellImmunityType</strong>
                                                </span>
                                            }
                                        }
                                        else
                                        { @unknownText}
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="col-sm-6">
                        <table class="table table-sm table-borderless">
                            <tbody style="table-layout: fixed">
                                @foreach (var abilitySpecial in ability.Attributes)
                                {
                                    <tr>
                                        <td class="text-uppercase text-muted table-column-ability-special-name">
                                            @if (!String.IsNullOrWhiteSpace(abilitySpecial.Name))
                                            {
                                                @abilitySpecial.Name
                                            }
                                            else
                                            {
                                                @String.Format("{0}:", abilitySpecial.RawName.Replace("_", " "))
                                            }
                                        </td>
                                        <td>@abilitySpecial.Value</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <table class="table table-sm" style="table-layout: fixed">
                            <tbody>
                                @foreach (var note in ability.Notes)
                                {
                                    <HeroAbilityNote Note="@note" />
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public HeroViewModel Hero { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            AppStateService.HeaderText = Hero.Name;
        }
    }
}
