@page "/items/game"
@using DotaDb.Data
@using DotaDb.Models
@inject ItemService ItemService
@*<div class="panel panel-default" style="margin-top: 5px">
        <div class="panel-body">
            @using (Html.BeginForm("index", "items", FormMethod.Get, new { @class = "form-inline", role = "form" }))
            {
                <div class="form-group">
                    <input type="text" class="form-control" name="itemName" id="itemName" placeholder="Search for an item">
                </div>
                <button type="submit" class="btn btn-default">
                    <i class="fa fa-search"></i>
                    Search
                </button>
            }
            @if (!String.IsNullOrEmpty(ViewBag.SearchItemName))
            {
                <p>Filter: <strong>@String.Format("'{0}'", ViewBag.SearchItemName)</strong> <small><a href="@Url.Action("index", "items")"><i class="fa fa-remove"></i></a></small></p>
            }
        </div>
    </div>*@

<div class="container py-2">
    <div class="card">
        <div class="card-body">
            <div class="row item-list">
                @{ int gameItemNumber = 0; }
                @foreach (var gameItem in gameItems)
                {
                    <div class="col-md-4">
                        @if (gameItemNumber++ >= 3)
                        {
                            <hr />
                        }
                        <div class="media" style="margin-bottom: 0">
                            <div class="img-thumbnail" style="border: 0" title="@gameItem.Name">
                                <img src="@gameItem.IconPath" class="mr-2 shadow" />
                            </div>
                            <div class="media-body">
                                <h4 class="mt-0">
                                    @if (!String.IsNullOrEmpty(gameItem.Name))
                                    {
                                        @gameItem.Name
                                    }
                                    else
                                    {
                                        @:Undefined
                                    }
                                </h4>
                                <p class="text-muted">@gameItem.Lore</p>
                            </div>
                        </div>
                        <table class="table table-striped table-sm" style="table-layout: fixed; margin-top: 15px">
                            <tbody class="text-uppercase">
                                <tr>
                                    <td>Item ID</td>
                                    <td>@gameItem.Id</td>
                                </tr>
                                <tr>
                                    <td>Cost</td>
                                    <td>@gameItem.Cost</td>
                                </tr>
                                <GameItemAttributeRowIfHasValue Name="Mana Cost" Value="@gameItem.ManaCost" />
                                <GameItemAttributeRowIfHasValue Name="Duration" Value="@gameItem.Duration" />
                                <GameItemAttributeRowIfHasValue Name="Damage" Value="@gameItem.Damage" />
                                <GameItemAttributeRowIfHasValue Name="Cast Point" Value="@gameItem.CastPoint" />
                                <GameItemAttributeRowIfHasValue Name="Cast Range" Value="@gameItem.CastRange" />
                                <GameItemAttributeRowIfHasValue Name="Cooldown" Value="@gameItem.Cooldown" />
                                <GameItemAttributeRowIfHasValue Name="Target Flags" Value="@gameItem.TargetFlags" />
                                <GameItemAttributeRowIfHasValue Name="Target Types" Value="@gameItem.TargetTypes" />
                                <GameItemAttributeRowIfHasValue Name="Team Targets" Value="@gameItem.TeamTargets" />
                                <GameItemAttributeRowIfHasValue Name="Declarations" Value="@gameItem.Declarations" />
                                <GameItemAttributeRowIfHasValue Name="Disassemble Rules" Value="@gameItem.DisassembleRule" />
                                <GameItemAttributeRowIfHasValue Name="Shareability" Value="@gameItem.Shareability" />
                                <GameItemAttributeRowIfHasValue Name="Shop Tags" Value="@gameItem.ShopTags" />
                                @if (gameItem.InitialCharges.HasValue)
                                {
                                    <tr>
                                        <td>Initial Charges</td>
                                        <td>@gameItem.InitialCharges.Value</td>
                                    </tr>
                                }
                                @if (gameItem.DisplayCharges.HasValue)
                                {
                                    <tr>
                                        <td>Display Charges</td>
                                        <td>@gameItem.DisplayCharges.Value</td>
                                    </tr>
                                }
                                @if (gameItem.StockInitial.HasValue)
                                {
                                    <tr>
                                        <td>Initial Stock</td>
                                        <td>@gameItem.StockInitial.Value</td>
                                    </tr>
                                }
                                @if (gameItem.StockMax.HasValue)
                                {
                                    <tr>
                                        <td>Max Stock</td>
                                        <td>@gameItem.StockMax.Value</td>
                                    </tr>
                                }
                                @if (gameItem.StockTime.HasValue)
                                {
                                    <tr>
                                        <td>Stock Time</td>
                                        <td>@gameItem.StockTime.Value</td>
                                    </tr>
                                }
                                <GameItemBooleanAttributeRowIfHasValue Name="Alertable" Value="@gameItem.IsAlertable" />
                                <GameItemBooleanAttributeRowIfHasValue Name="Droppable" Value="@gameItem.IsDroppable" />
                                <GameItemBooleanAttributeRowIfHasValue Name="Killable" Value="@gameItem.IsKillable" />
                                <GameItemBooleanAttributeRowIfHasValue Name="Permanent" Value="@gameItem.IsPermanent" />
                                <GameItemBooleanAttributeRowIfHasValue Name="Purchasable" Value="@gameItem.IsPurchasable" />
                                <GameItemBooleanAttributeRowIfHasValue Name="Sellable" Value="@gameItem.IsSellable" />
                                <GameItemBooleanAttributeRowIfHasValue Name="Stackable" Value="@gameItem.IsStackable" />
                                <GameItemBooleanAttributeRowIfHasValue Name="Contributes to Net Worth" Value="@gameItem.ContributesToNetWorthWhenDropped" />
                                <GameItemBooleanAttributeRowIfHasValue Name="Secret Shop" Value="@gameItem.SecretShop" />
                                <GameItemBooleanAttributeRowIfHasValue Name="Side Shop" Value="@gameItem.SideShop" />
                                <GameItemBooleanAttributeRowIfHasValue Name="Recipe" Value="@gameItem.IsRecipe" />

                                @foreach (var abilitySpecial in gameItem.Attributes)
                                {
                                    <tr>
                                        <td>
                                            @if (!String.IsNullOrWhiteSpace(abilitySpecial.Name))
                                            {
                                                @abilitySpecial.Name
                                            }
                                            else
                                            {
                                                @String.Format("{0}", abilitySpecial.RawName.Replace("_", " "))
                                            }
                                        </td>
                                        <td>@abilitySpecial.Value</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        @if (!String.IsNullOrWhiteSpace(gameItem.Description))
                        {
                            <div class="alert alert-light">
                                <small>@gameItem.Description</small>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private IReadOnlyCollection<GameItemViewModel> gameItems = new List<GameItemViewModel>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            string searchedItemName = string.Empty;
            gameItems = await ItemService.GetGameItemsAsync(searchedItemName);
            StateHasChanged();
        }
    }
}